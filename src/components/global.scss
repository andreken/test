// using pixels, if the user changes default font size in the browser, media query won't be affected by that. For this reason i use relative units. ems are the best option
// 1em = 16px --> convert from px to em
@mixin respond($breakpoint) {
	@if $breakpoint == phone {
		@media (max-width: 37.5em) { @content };	//600px
	}
	@if $breakpoint == tab-port {
		@media (max-width: 56.25em) { @content };		//900px
	}
	@if $breakpoint == tab-land {
		@media (max-width: 75em) { @content };		//1200px
	}
	@if $breakpoint == big-desk {
		@media (min-width: 112.5em) { @content };	//1800px
	}			
}


/* css reset to make every browser rendering page in the same way */
*, *::after, *::before {
	font-family: 'Raleway', sans-serif;
	margin: 0;
	padding: 0;
	box-sizing: inherit;
}

html {
	/*set default font-size: 10px;*/
	font-size: 62.5%;	/* 10/16*100, because 16px is the default size */

	// by using rem, which depends on font-size, we will make all the layout of the webpage dependent on the font-size	
	// using this order because i want to apply the style of minor width limit
	@include respond(tab-land) {	// width < 1200
		font-size: 56.25%;		// 1rem = 9px --> 9/16*100
	}
	@include respond(tab-port) {	// width < 900
		font-size: 50%;			// 1rem = 8px --> 8/16*100
	}	
	@include respond(phone) {	// width < 600
		font-size: 43.75%;			// 1rem = 7px --> 7/16*100
	}		
	@include respond(big-desktop) {	// width > 1800
		font-size: 75%;			// 1rem = 12px --> 12/16*100
	}
}	